The diagram can be generated using PlantUML.

@startuml

title Sakani Platform

actor :Developer: as Developer

rectangle "public accessible layer" {

  folder "SAKANI.PUBLIC.URL (nginx)" as WebUI {
    frame "static files" {
      interface "/" as WebUIRootUrl
      node "sakani-admin (jsbundle)" as SakaniAdmin
      SakaniAdmin -- WebUIRootUrl
    }
    frame "proxy" as WebUIApi {
      interface "/auth" as WebUIAuthUrl
      interface "/assets-api" as WebUIAssetsUrl
      interface "/projects-api" as WebUIProjectsUrl
      interface "/unit-categories-api" as WebUIUnitCatsUrl
    }
  }

  folder "SAKANI.PUBLIC.STORAGE.URL" as AssetsPublic {
    storage "sakani-assets (minio)" as Minio
  }
}


rectangle "internal intermediary layer" as MiddleLayer {

  folder "sakani-authentication-service (REST)" as Auth {
    interface "/api/v1" as AuthAPI
    file "Login\nPage" as AuthLoginPage
  }

  folder "sakani-assets\n-intermediary (REST)" as AssetsInt {
    interface "/" as AssetsIntAPI
  }

  folder "sakani-projects\n-intermediary (REST)" as ProjectsInt {
    interface "/" as ProjectsIntAPI
  }

  folder "sakani-unit-categories\n-intermediary (REST)" as UnitCatsInt {
    interface "/" as UnitCatsIntAPI
  }

}

rectangle "internal data store layer" as DataLayer {

  folder "sakani-assets-api (REST)" as AssetsCore {
    interface "/assets-api" as AssetsCoreAPI
  }

  folder "sakani-projects-graphql" as ProjectsCore {
    interface "/projects-api" as ProjectsCoreAPI
    control "sidekiq" as ProjectsSidekiq
    card IwaApina
  }

  database "LDAP" as LDAP

  folder "database (PostgreSQL)" as Database {
    database "sakani_projects" as ProjectsDB
    database "sakani_unit_categories" as UnitsDB
  }

  database redis as Redis

  folder mongodb as MongoDB {
    database "sakani-assets" as AssetsDB
  }
}

Developer -- WebUI
Developer -- AssetsPublic

Auth -- LDAP

SakaniAdmin --( WebUIAuthUrl
SakaniAdmin --( WebUIAssetsUrl
SakaniAdmin --( WebUIProjectsUrl
SakaniAdmin --( WebUIUnitCatsUrl

WebUIAuthUrl --( AuthAPI : JWT Token
WebUIAuthUrl -- AuthLoginPage

WebUIAssetsUrl --( AssetsIntAPI
WebUIProjectsUrl --( ProjectsIntAPI
WebUIUnitCatsUrl --( UnitCatsIntAPI

AssetsInt --( AssetsCoreAPI
ProjectsInt --( ProjectsCoreAPI

AssetsCore -- AssetsDB
AssetsCore --> Minio : Upload to

ProjectsCore -- ProjectsDB

ProjectsSidekiq )-- Redis

@enduml
